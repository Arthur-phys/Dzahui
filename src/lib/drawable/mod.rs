use std::fs::File;

// Common functions in drawable (2D or 3D objects)
pub mod mesh2d;
pub mod mesh3d;

// All drawable objects implment a draw and setup function
pub trait Drawable {
    fn setup(&self, binder: &mut Binder);
    fn draw(&self);
}

// If a drawable can come from a file, then the file needs a certain format
// Therefore, it needs to be checked
pub trait FromObj: Drawable {
    
    fn check_file(file: &str) {
        if !file.ends_with(".obj") {
            panic!("FIle chosen does not match extension allowed");
        }
        
    }
    fn generate_fields();
}

// Variables asocciated with GPU and drawable object
pub struct Binder {
    pub vbo: u32, // Vertex Buffer Object - Vertices Generated by Mesh
    pub vao: u32, // Vertex Array Object - Binds vertices and it's configuration with OpenGL
    pub ebo: u32, // Element Buffer Object - Indices to draw vertices
}

impl Binder {
    pub fn new(vbo: u32, vao: u32, ebo: u32) -> Binder {
        Binder { vbo, vao, ebo }
    }
}